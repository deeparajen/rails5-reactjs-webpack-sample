{"ast":null,"code":"var _jsxFileName = \"/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/BodyPostApp.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PostNewForm from './PostNewForm';\nimport PostTable from './PostTable'; //import Pagination from './Pagination';\n\nimport Pagination from \"react-js-pagination\";\nimport Select from 'react-select';\n\nvar BodyPostApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BodyPostApp, _React$Component);\n\n  function BodyPostApp(props) {\n    var _this;\n\n    _classCallCheck(this, BodyPostApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BodyPostApp).call(this, props));\n\n    _this.handleDropDownChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption[\"value\"]);\n\n      var self = _assertThisInitialized(_this);\n\n      $.ajax({\n        url: '/posts/search?query=' + selectedOption[\"value\"],\n        method: 'GET',\n        data: {\n          posts: self.state\n        },\n        success: function success(data) {\n          self.setState({\n            posts: data\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      intialPosts: [],\n      selectedOption: {},\n      posts: [],\n      categories: [],\n      activePage: 1,\n      itemsCountPerPage: 1,\n      totalItemsCount: 1\n    };\n    _this.handleAdd = _this.handleAdd.bind(_assertThisInitialized(_this));\n    _this.handleDeleteRecord = _this.handleDeleteRecord.bind(_assertThisInitialized(_this));\n    _this.handleUpdateRecord = _this.handleUpdateRecord.bind(_assertThisInitialized(_this));\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_this));\n    _this.handlePageChange = _this.handlePageChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BodyPostApp, [{\n    key: \"handlePageChange\",\n    value: function handlePageChange(pageNumber) {\n      console.log(\"active page is \".concat(pageNumber));\n      var self = this;\n      $.ajax({\n        url: '/posts/',\n        data: {\n          page: pageNumber\n        },\n        success: function success(data) {\n          self.setState({\n            posts: data.page_posts,\n            activePage: data.page,\n            itemsCountPerPage: data.per_page,\n            totalItemsCount: data.pages\n          });\n        },\n        error: function error(xhr, status, _error) {\n          alert('Cannot get data from POSTS Controller: ', _error);\n        }\n      });\n    }\n  }, {\n    key: \"handleUpdateRecord\",\n    value: function handleUpdateRecord(old_post, post) {\n      var posts = this.state.posts.slice();\n      var index = posts.indexOf(old_post);\n      posts.splice(index, 1, post);\n      this.setState({\n        posts: posts\n      });\n    }\n  }, {\n    key: \"handleDeleteRecord\",\n    value: function handleDeleteRecord(post_id) {\n      this.setState(function (prevState) {\n        return {\n          posts: prevState.posts.filter(function (option) {\n            return post_id !== option.id;\n          })\n        };\n      });\n    }\n  }, {\n    key: \"handleAdd\",\n    value: function handleAdd(post) {\n      var posts = this.state.posts;\n      posts.push(post);\n      this.setState({\n        posts: posts\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      /*fetch('/posts.json')\n        .then((response) => {return response.json()})\n        .then((data) => {this.setState({ posts: data }) });  */\n      var self = this;\n      $.ajax({\n        url: '/posts/',\n        data: {\n          page: self.state.activePage\n        },\n        success: function success(data) {\n          console.log(data.page);\n          self.setState({\n            intialPosts: data.posts\n          });\n          self.setState({\n            posts: data.page_posts,\n            activePage: data.page,\n            itemsCountPerPage: data.per_page,\n            totalItemsCount: data.pages\n          });\n        },\n        error: function error(xhr, status, _error2) {\n          alert('Cannot get data from POSTS Controller: ', _error2);\n        }\n      });\n      fetch('/categories.json').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          categories: data\n        });\n      });\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var res = [];\n      res = this.state.intialPosts.map(function (post) {\n        var obj = {};\n        obj[\"value\"] = post.name, obj[\"label\"] = post.name;\n        return obj;\n      });\n      var result = res.reduce(function (unique, o) {\n        if (!unique.some(function (obj) {\n          return obj.label === o.label && obj.value === o.value;\n        })) {\n          unique.push(o);\n        }\n\n        return unique;\n      }, []);\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          float: \"right\",\n          width: \"40%\",\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Filter by Name: \")), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.selectedOption,\n        onChange: this.handleDropDownChange,\n        options: this.loadData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2 col-sm-2 col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(PostNewForm, {\n        handleAdd: this.handleAdd,\n        categories: this.state.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2 col-sm-2 col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(PostTable, {\n        posts: this.state.posts,\n        categories: this.state.categories,\n        handleDeleteRecord: this.handleDeleteRecord,\n        handleUpdateRecord: this.handleUpdateRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        activePage: this.state.activePage,\n        itemsCountPerPage: this.state.itemsCountPerPage,\n        totalItemsCount: this.state.totalItemsCount,\n        pageRangeDisplayed: 5,\n        onChange: this.handlePageChange,\n        itemClass: \"page-item\",\n        linkClass: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BodyPostApp;\n}(React.Component); // class end\n\n\nexport default BodyPostApp;","map":{"version":3,"sources":["/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/BodyPostApp.js"],"names":["React","PostNewForm","PostTable","Pagination","Select","BodyPostApp","props","handleDropDownChange","selectedOption","setState","console","log","self","$","ajax","url","method","data","posts","state","success","intialPosts","categories","activePage","itemsCountPerPage","totalItemsCount","handleAdd","bind","handleDeleteRecord","handleUpdateRecord","loadData","handlePageChange","pageNumber","page","page_posts","per_page","pages","error","xhr","status","alert","old_post","post","slice","index","indexOf","splice","post_id","prevState","filter","option","id","push","fetch","then","response","json","res","map","obj","name","result","reduce","unique","o","some","label","value","float","width","display","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostNewForm from './PostNewForm';\nimport PostTable from './PostTable';\n//import Pagination from './Pagination';\nimport Pagination from \"react-js-pagination\";\nimport Select from 'react-select';\n\nclass BodyPostApp extends React.Component {\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      intialPosts: [],\n      selectedOption: {},\n      posts: [],\n      categories: [],\n      activePage: 1,\n      itemsCountPerPage: 1,\n      totalItemsCount: 1\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleDeleteRecord = this.handleDeleteRecord.bind(this);\n    this.handleUpdateRecord = this.handleUpdateRecord.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n  \n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    var self = this;\n    $.ajax({\n      url: '/posts/',\n      data: { page: pageNumber },\n      success: function(data) {\n      \tself.setState({\n      \t\t posts: data.page_posts, \n      \t\t activePage: data.page,\n      \t\titemsCountPerPage: data.per_page, \n      \t\ttotalItemsCount: data.pages \n      \t\t});\n      },\n      error: function(xhr, status, error) {\n        alert('Cannot get data from POSTS Controller: ', error);\n      }\n});\n    \n  }\n\nhandleDropDownChange = (selectedOption) => {\n    this.setState({ selectedOption: selectedOption});\n    console.log(`Option selected:`, selectedOption[\"value\"]);\n    var self = this;\n    \n    $.ajax({\n    \turl: '/posts/search?query='+selectedOption[\"value\"],\n        method: 'GET',\n\t\tdata: { posts: self.state },\n\t\tsuccess: function(data) {\n\t\t\tself.setState({ posts: data });\n\t\t}\n    });\n  }\n\nhandleUpdateRecord(old_post, post)\n{\n\tvar posts = this.state.posts.slice();\n    var index = posts.indexOf(old_post);\n    posts.splice(index, 1, post);\n    this.setState({ posts: posts });\n}\n\nhandleDeleteRecord(post_id)\n{\n\tthis.setState((prevState) => ({\n        posts: prevState.posts.filter((option) => {\n            return post_id !== option.id;\n        })\n     }))\n}\n\nhandleAdd(post)\n{\n\t var posts = this.state.posts;\n     posts.push(post);\n     this.setState({ posts: posts });\n}\n\ncomponentDidMount(){\n    /*fetch('/posts.json')\n      .then((response) => {return response.json()})\n      .then((data) => {this.setState({ posts: data }) });  */\n     \n    var self = this;\n    $.ajax({\n      url: '/posts/',\n      data: { page: self.state.activePage },\n      success: function(data) {\n      \tconsole.log(data.page);\n      \tself.setState({intialPosts: data.posts});\n        self.setState({\n      \t\t posts: data.page_posts, \n      \t\t activePage: data.page,\n      \t\titemsCountPerPage: data.per_page, \n      \t\ttotalItemsCount: data.pages \n      \t\t});\n      },\n      error: function(xhr, status, error) {\n        alert('Cannot get data from POSTS Controller: ', error);\n      }\n});\n      \n    fetch('/categories.json')\n      .then((response) => {return response.json()})\n      .then((data) => {this.setState({ categories: data }) });\n      \n      \n  }\n  \n  loadData()\n  {\n  \t var res = [];\n      res = this.state.intialPosts.map((post) => {\n      \tvar obj = {}\n\t    obj[\"value\"] = post.name,\n\t    obj[\"label\"]=post.name\n\t    \n\t  return obj;\n   });\n   var result = res.reduce((unique, o) => {\n    if(!unique.some(obj => obj.label === o.label && obj.value === o.value)) {\n      unique.push(o);\n    }\n    return unique;\n   },[]);\n\n   return result;\n  }\n \n\nrender(){\n\treturn(\n    \t\n     <div>\n       \n       \n       <div className=\"row\" style={{ float: \"right\", width: \"40%\",display: \"inline-block\"}}>\n        <div className=\"col-md-4\" >\n         <label htmlFor=\"filter\">Filter by Name: </label></div>\n         <div className=\"col-md-8\" >\n         <Select \n          value={this.state.selectedOption}\n        onChange={this.handleDropDownChange}\n        options={this.loadData()}\n        \n      /></div>\n      <div className=\"col-md-2 col-sm-2 col-xs-2\">&nbsp;</div>\n        </div>\n        \n        <div className=\"row\">\n      <div className=\"col-md-12\">\n         <PostNewForm handleAdd={this.handleAdd} categories = {this.state.categories}/>\n      </div>\n      <div className=\"col-md-2 col-sm-2 col-xs-2\">&nbsp;</div>\n      </div>\n      \n      <div className=\"row\">\n      <div className=\"col-md-12\">\n         <PostTable posts={this.state.posts} categories={this.state.categories} handleDeleteRecord={this.handleDeleteRecord} handleUpdateRecord={this.handleUpdateRecord}/>\n       </div>\n      </div>\n      \n      <div className=\"row\">\n      <div className=\"col-md-12 d-flex justify-content-center\">\n        <Pagination\n          activePage={this.state.activePage}\n          itemsCountPerPage={this.state.itemsCountPerPage}\n          totalItemsCount={this.state.totalItemsCount}\n          pageRangeDisplayed={5}\n          onChange={this.handlePageChange}\n          itemClass='page-item'\n          linkClass='page-link'\n        />\n      </div>\n      </div>\n      \n     </div>\n    )\n  }\n\n} // class end\n\nexport default BodyPostApp;"]},"metadata":{},"sourceType":"module"}