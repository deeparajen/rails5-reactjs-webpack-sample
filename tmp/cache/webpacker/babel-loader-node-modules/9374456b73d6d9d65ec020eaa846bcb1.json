{"ast":null,"code":"var _jsxFileName = \"/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostTable.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'; //import Post from './Post'\n\nvar PostTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostTable, _React$Component);\n\n  function PostTable(props) {\n    var _this;\n\n    _classCallCheck(this, PostTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostTable).call(this, props));\n    _this.state = {\n      isInEditable: false,\n      post_edit_id: '',\n      value: '',\n      category_id: ''\n    };\n    _this.handleDeleteRecord = _this.handleDeleteRecord.bind(_assertThisInitialized(_this));\n    _this.getCategory = _this.getCategory.bind(_assertThisInitialized(_this));\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_this));\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this)); //this.onRowClick = this.onRowClick.bind(this);\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PostTable, [{\n    key: \"handleDeleteRecord\",\n    value: function handleDeleteRecord(id) {\n      var self = this;\n      $.ajax({\n        method: 'DELETE',\n        url: '/posts/' + id,\n        success: function success(data) {\n          self.props.handleDeleteRecord(id);\n        }\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(post) {\n      console.log(\"updateddd\");\n      console.log(this.state.category_id);\n      var post_data = {\n        name: document.getElementById(\"name\").value,\n        description: document.getElementById(\"description\").value,\n        title: document.getElementById(\"title\").value,\n        author: document.getElementById(\"author\").value,\n        category_id: this.state.category_id\n      };\n      console.log(post_data);\n      var self = this;\n      $.ajax({\n        method: 'PUT',\n        url: '/posts/' + post.id,\n        data: {\n          post: post_data\n        },\n        success: function success(data) {\n          self.props.handleUpdateRecord(data);\n          self.setState({\n            isInEditable: false\n          });\n          self.setState({\n            post_edit_id: ''\n          });\n          self.setState({\n            category_id: ''\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleToggle\",\n    value: function handleToggle(id) {\n      this.setState({\n        isInEditable: !this.state.isInEditable\n      });\n      this.setState({\n        post_edit_id: id\n      });\n      console.log(this.state.post_edit_id);\n    }\n  }, {\n    key: \"getCategory\",\n    value: function getCategory(category_id) {\n      var cname = this.props.categories.map(function (cat) {\n        return cat.id.toString() === category_id.toString() ? cat.name : '';\n      });\n      return cname;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      var value = document.getElementById(\"category_id\").value;\n      console.log(value);\n      this.setState({\n        category_id: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        Header: \"Name\",\n        accessor: \"name\",\n        style: {\n          textAlign: \"right\"\n        },\n        width: 100,\n        maxwidth: 100,\n        minwidth: 100,\n        Cell: function Cell(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, _this2.state.isInEditable && _this2.state.post_edit_id === props.original.id ? React.createElement(\"input\", {\n            name: \"name\",\n            defaultValue: props.original.name,\n            className: \"form-control\",\n            type: \"text\",\n            id: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }) : props.original.name);\n        }\n      }, {\n        Header: \"Title\",\n        accessor: \"title\",\n        sortable: false,\n        filterable: false,\n        Cell: function Cell(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, _this2.state.isInEditable && _this2.state.post_edit_id === props.original.id ? React.createElement(\"input\", {\n            name: \"title\",\n            defaultValue: props.original.title,\n            className: \"form-control\",\n            type: \"text\",\n            id: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }) : props.original.title);\n        }\n      }, {\n        Header: \"Author\",\n        accessor: \"author\",\n        sortable: false,\n        filterable: false,\n        Cell: function Cell(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, _this2.state.isInEditable && _this2.state.post_edit_id === props.original.id ? React.createElement(\"input\", {\n            name: \"author\",\n            defaultValue: props.original.author,\n            className: \"form-control\",\n            type: \"text\",\n            id: \"author\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }) : props.original.author);\n        }\n      }, {\n        Header: \"Description\",\n        accessor: \"description\",\n        sortable: false,\n        filterable: false,\n        Cell: function Cell(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, _this2.state.isInEditable && _this2.state.post_edit_id === props.original.id ? React.createElement(\"input\", {\n            name: \"description\",\n            defaultValue: props.original.description,\n            className: \"form-control\",\n            type: \"text\",\n            id: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }) : props.original.description);\n        }\n      }, {\n        Header: \"Category\",\n        accessor: \"category_id\",\n        sortable: false,\n        filterable: false,\n        Cell: function Cell(props) {\n          var value = _this2.state.category_id && _this2.state.post_edit_id === props.original.id ? _this2.state.category_id : props.original.category_id;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, _this2.state.isInEditable && _this2.state.post_edit_id === props.original.id ? React.createElement(\"select\", {\n            defaultValue: value,\n            className: \"form-control\",\n            onChange: _this2.handleChange,\n            name: \"category_id\",\n            id: \"category_id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, _this2.props.categories.map(function (category) {\n            return React.createElement(\"option\", {\n              value: category.id,\n              key: category.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197\n              },\n              __self: this\n            }, category.name);\n          })) : _this2.getCategory(props.original.category_id));\n        }\n      }, {\n        Header: \"Published at\",\n        accessor: \"published_at\",\n        sortable: false,\n        filterable: false\n      }, {\n        Header: \"Last edited at\",\n        accessor: \"last_edited_at\",\n        sortable: false,\n        filterable: false\n      }, {\n        Header: \"Action\",\n        Cell: function Cell(props) {\n          var button = [];\n\n          if (_this2.state.isInEditable && _this2.state.post_edit_id === props.original.id) {\n            button = [React.createElement(\"a\", {\n              className: \"btn btn-success btn-sm\",\n              key: \"save_\" + props.original.id,\n              onClick: function onClick() {\n                console.log(props.original);\n\n                _this2.handleUpdate(props.original);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228\n              },\n              __self: this\n            }, \"Save\"), React.createElement(\"a\", {\n              className: \"btn btn-success btn-sm\",\n              key: \"Cancel_\" + props.original.id,\n              onClick: function onClick() {\n                _this2.handleToggle(props.original.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 238\n              },\n              __self: this\n            }, \"Cancel\")];\n          } else {\n            button = [React.createElement(\"a\", {\n              className: \"btn btn-primary btn-xs\",\n              key: \"edit_\" + props.original.id,\n              onClick: function onClick() {\n                _this2.handleToggle(props.original.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(\"a\", {\n              className: \"btn btn-danger btn-xs\",\n              key: \"delete_\" + props.original.id,\n              onClick: function onClick() {\n                _this2.handleDeleteRecord(props.original.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256\n              },\n              __self: this\n            }, \"Delete\")];\n          }\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, button);\n        },\n        sortable: false,\n        filterable: false,\n        width: 100,\n        maxwidth: 100,\n        minwidth: 100\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        columns: columns,\n        data: this.props.posts,\n        pageSize: this.props.posts.length,\n        showPagination: false,\n        className: \"-striped -highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostTable;\n}(React.Component);\n\nexport default PostTable;","map":{"version":3,"sources":["/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostTable.js"],"names":["React","ReactTable","PostTable","props","state","isInEditable","post_edit_id","value","category_id","handleDeleteRecord","bind","getCategory","handleToggle","handleUpdate","handleChange","id","self","$","ajax","method","url","success","data","post","console","log","post_data","name","document","getElementById","description","title","author","handleUpdateRecord","setState","cname","categories","map","cat","toString","columns","Header","accessor","style","textAlign","width","maxwidth","minwidth","Cell","original","sortable","filterable","category","button","posts","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\n//import Post from './Post'\n\nclass PostTable extends React.Component{\n  constructor(props)\n  {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tisInEditable: false,\n  \t\tpost_edit_id: '',\n  \t\tvalue: '',\n  \t\tcategory_id: ''\n  \t}\n  \tthis.handleDeleteRecord = this.handleDeleteRecord.bind(this);\n  \tthis.getCategory = this.getCategory.bind(this);\n  \tthis.handleToggle = this.handleToggle.bind(this);\n  \tthis.handleUpdate = this.handleUpdate.bind(this);\n  \t//this.onRowClick = this.onRowClick.bind(this);\n  \tthis.handleChange = this.handleChange.bind(this);\n  }\t\n  \n  handleDeleteRecord(id)\n\t{\n\t  var self = this;\n\t  $.ajax({\n      method: 'DELETE',\n      url: '/posts/' + id,\n      success: function(data) {\n        self.props.handleDeleteRecord(id);\n      }\n     });\n\t}\n\t\n\thandleUpdate(post)\n\t{ \n\t\tconsole.log(\"updateddd\");\n\t\tconsole.log(this.state.category_id);\n\t\tvar post_data = {\n        name: document.getElementById(\"name\").value,\n        description: document.getElementById(\"description\").value,\n        title: document.getElementById(\"title\").value,\n        author: document.getElementById(\"author\").value,\n        category_id: this.state.category_id\n      };\n      console.log(post_data);\n      var self = this;\n\t\t$.ajax({\n        method: 'PUT',\n        url: '/posts/' + post.id,\n        data: { post: post_data },\n        success: function(data) {\n          self.props.handleUpdateRecord(data);\n          self.setState({ isInEditable: false });\n          self.setState({ post_edit_id: '' });\n          self.setState({ category_id: '' });\n        }\n      })\n\t}\n\t\n\thandleToggle(id) {\n    this.setState({ isInEditable: !this.state.isInEditable });\n    this.setState({ post_edit_id: id });\n    console.log(this.state.post_edit_id);\n    }\n\t\n\tgetCategory(category_id)\n\t{\n\t\tconst cname = this.props.categories.map((cat) => {return cat.id.toString() === category_id.toString() ? cat.name : ''});\n\t\treturn cname;\n\t}\n\t\n\thandleChange()\n    {\n       var value = document.getElementById(\"category_id\").value;\n       console.log(value)\n       this.setState({ category_id: value });\n    }\n\t\n  render() {\n   \tconst columns =[\n         {\n             Header: \"Name\",\n             accessor: \"name\",\n             style: {\n                 textAlign: \"right\"\n             },\n             width: 100,\n             maxwidth: 100,\n             minwidth: 100,\n             Cell: props => {\n                return (\n                \t<div>\n                \t{ this.state.isInEditable && this.state.post_edit_id === props.original.id ?\n                \t  <input name=\"name\"\n                \t  defaultValue={props.original.name}\n                \t  className=\"form-control\"\n                      type=\"text\"\n                      id=\"name\"\n                \t  />\n                \t  :\n                \t  props.original.name\n                \t}\n                \t\n                \t</div>\n                  \n                )\n              }\n             \n         },\n         {\n            Header: \"Title\",\n            accessor: \"title\",\n            sortable: false,\n            filterable: false,\n            Cell: props => {\n                return (\n                \t<div>\n                \t{ this.state.isInEditable && this.state.post_edit_id === props.original.id ?\n                \t  <input name=\"title\"\n                \t  defaultValue={props.original.title}\n                \t  className=\"form-control\"\n                      type=\"text\"\n                      id=\"title\"\n                \t  />\n                \t  :\n                \t  props.original.title\n                \t}\n                \t\n                \t</div>\n                  \n                )\n              }\n        },\n        {\n            Header: \"Author\",\n            accessor: \"author\",\n            sortable: false,\n            filterable: false,\n            Cell: props => {\n                return (\n                \t<div>\n                \t{ this.state.isInEditable && this.state.post_edit_id === props.original.id ?\n                \t  <input name=\"author\"\n                \t  defaultValue={props.original.author}\n                \t  className=\"form-control\"\n                      type=\"text\"\n                      id=\"author\"\n                \t  />\n                \t  :\n                \t  props.original.author\n                \t}\n                \t\n                \t</div>\n                  \n                )\n              }\n        },\n        {\n            Header: \"Description\",\n            accessor: \"description\",\n            sortable: false,\n            filterable: false,\n            Cell: props => {\n                return (\n                \t<div>\n                \t{ this.state.isInEditable && this.state.post_edit_id === props.original.id ?\n                \t  <input name=\"description\"\n                \t  defaultValue={props.original.description}\n                \t  className=\"form-control\"\n                      type=\"text\"\n                      id=\"description\"\n                \t  />\n                \t  :\n                \t  props.original.description\n                \t}\n                \t\n                \t</div>\n                  \n                )\n              }\n        },\n        {\n            Header: \"Category\",\n            accessor: \"category_id\",\n            sortable: false,\n            filterable: false,\n            Cell: props => {\n            \t const value = this.state.category_id && this.state.post_edit_id === props.original.id ? this.state.category_id : props.original.category_id\n                return (\n             \n                \t<div>\n                \t{ this.state.isInEditable && this.state.post_edit_id === props.original.id ?\n                \t  <select defaultValue={value} className=\"form-control\" onChange={this.handleChange} name=\"category_id\" id=\"category_id\">\n\t\t {this.props.categories.map((category) =>  (\n\t\t \t<option value={category.id} key={category.name}>{category.name}</option>\n\t\t ))\n\t\t }\n\t\t \n\t\t </select>\n                \t  :\n                \t  this.getCategory(props.original.category_id)\n                \t}\n                \t\n                \t</div>\n                  \n                )\n               }\n        },\n        {\n            Header: \"Published at\",\n            accessor: \"published_at\",\n            sortable: false,\n            filterable: false\n        },\n        {\n            Header: \"Last edited at\",\n            accessor: \"last_edited_at\",\n            sortable: false,\n            filterable: false\n        },\n        {\n            Header: \"Action\",\n            Cell: props => {\n            \tlet button = [];\n            \tif (this.state.isInEditable && this.state.post_edit_id === props.original.id) {\n      button = [<a className=\"btn btn-success btn-sm\"\n                     key={\"save_\"+props.original.id}\n                     onClick={() => {\n                     \tconsole.log(props.original);\n                        this.handleUpdate(props.original);\n                        \n                    }}\n                      >\n                     Save\n                   </a>,\n                   <a className=\"btn btn-success btn-sm\"\n                   key={\"Cancel_\"+props.original.id}\n                   onClick={() => {\n                        this.handleToggle(props.original.id);\n                    }}\n                    >\n                     Cancel\n                  </a>]\n    } else {\n      button = [<a className=\"btn btn-primary btn-xs\"\n                     key={\"edit_\"+props.original.id}\n                     onClick={() => {\n                        this.handleToggle(props.original.id);\n                        \n                    }}\n                      >\n                     Edit\n                   </a>,\n                   <a className=\"btn btn-danger btn-xs\"\n                   key={\"delete_\"+props.original.id}\n                   onClick={() => {\n                        this.handleDeleteRecord(props.original.id);\n                    }}\n                    >\n                     Delete\n                  </a>]\n    }\n            \t\n                return (\n                \t<div>\n                \t\n                \t{button}\n                  </div>\n                )\n            },\n            sortable: false,\n            filterable: false,\n            width: 100,\n            maxwidth: 100,\n            minwidth: 100\n        }\n        \n     ]\n     \n     \n     return(\n      <div>\n         <ReactTable \n          columns={columns}\n          data={this.props.posts}\n          pageSize={this.props.posts.length}\n          showPagination={false}\n          className=\"-striped -highlight\"\n          \n          >\n          </ReactTable>\n      \n        \n      </div>\n    )\n    \n  }\n\n}\n\n\nexport default PostTable;"]},"metadata":{},"sourceType":"module"}