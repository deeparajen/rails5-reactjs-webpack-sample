{"ast":null,"code":"var _jsxFileName = \"/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostNewForm.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport './custom.css';\n\nvar PostNewForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostNewForm, _React$Component);\n\n  function PostNewForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostNewForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostNewForm).call(this, props));\n    _this.state = {\n      name: '',\n      title: '',\n      author: '',\n      description: '',\n      category_id: '',\n      errors: []\n    };\n    _this.handleAdd = _this.handleAdd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PostNewForm, [{\n    key: \"validate\",\n    value: function validate() {\n      var errors = [];\n\n      if (this.state.name.length === 0) {\n        errors.push(\"Name can't be empty!!\");\n      }\n\n      if (this.state.title.length === 0) {\n        errors.push(\"title can't be empty!!\");\n      }\n\n      if (this.state.author.length === 0) {\n        errors.push(\"author can't be empty!!\");\n      }\n\n      if (this.state.description.length === 0) {\n        errors.push(\"description can't be empty!!\");\n      }\n\n      if (this.state.category_id === '') {\n        errors.push(\"Please select category!!\");\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"handleAdd\",\n    value: function handleAdd(e) {\n      e.preventDefault();\n      var errors = this.validate();\n\n      if (errors.length > 0) {\n        this.setState({\n          errors: errors\n        });\n        self.props.setErrorState(errors);\n        return;\n      }\n\n      var self = this;\n      $.ajax({\n        url: '/api/v1/posts',\n        method: 'POST',\n        data: {\n          post: self.state\n        },\n        success: function success(data) {\n          self.props.handleAdd(data);\n          self.setState(function () {\n            return {\n              name: '',\n              title: '',\n              author: '',\n              description: '',\n              category_id: ''\n            };\n          });\n        },\n        error: function error(xhr, status, _error) {\n          alert('Cannot add a new record: ', _error);\n        }\n      }); // ajax end\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      console.log(errors);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"error_explanation\",\n        style: errors.length > 0 ? {} : {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, errors.map(function (error) {\n        return React.createElement(\"li\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, error);\n      }))), React.createElement(\"form\", {\n        className: \"form-inline\",\n        onSubmit: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            name: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            title: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"author\",\n        placeholder: \"Author\",\n        value: this.state.author,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            author: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.category_id,\n        className: \"form-control\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            category_id: evt.target.value\n          });\n        },\n        name: \"category_id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        slected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Please Select Option\"), this.props.categories.map(function (category) {\n        return React.createElement(\"option\", {\n          value: category.id,\n          key: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, category.name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            description: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return PostNewForm;\n}(React.Component);\n\nexport default PostNewForm;","map":{"version":3,"sources":["/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostNewForm.js"],"names":["React","PostNewForm","props","state","name","title","author","description","category_id","errors","handleAdd","bind","length","push","e","preventDefault","validate","setState","self","setErrorState","$","ajax","url","method","data","post","success","error","xhr","status","alert","console","log","display","map","evt","target","value","categories","category","id","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './custom.css'\n\nclass PostNewForm extends React.Component{\n    constructor(props)\n    {\n    \tsuper(props);\n    \tthis.state = {\n         name: '',\n      title: '',\n      author: '',\n      description: '',\n      category_id: '',\n      errors: []\n    \t}\n    \tthis.handleAdd = this.handleAdd.bind(this);\n    }  \n    \n    validate()\n    {\n    \tconst errors = [];\n\n  if (this.state.name.length === 0) {\n    errors.push(\"Name can't be empty!!\");\n  }\n\n  if (this.state.title.length === 0) {\n    errors.push(\"title can't be empty!!\");\n  }\n  if (this.state.author.length === 0) {\n    errors.push(\"author can't be empty!!\");\n  }\n  if (this.state.description.length === 0) {\n    errors.push(\"description can't be empty!!\");\n  }\n  if (this.state.category_id === '') {\n    errors.push(\"Please select category!!\");\n  }\n  \n\n  return errors;\n    }\n       \n    handleAdd(e)\n    {\n    \t\n    \te.preventDefault();\n    \tlet errors = this.validate();\n    \tif (errors.length > 0) {\n           this.setState({ errors });\n           self.props.setErrorState(errors);\n           return;\n        }\n    \tvar self = this;\n    \t$.ajax({\n    \t\turl: '/api/v1/posts',\n        method: 'POST',\n\t\tdata: { post: self.state },\n\t\tsuccess: function(data) {\n\t\t\tself.props.handleAdd(data);\n\t\t\tself.setState(() => {\n\t\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\ttitle: '',\n\t\t\t\tauthor: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcategory_id: ''\n\t\t\t\t}\n\t\t\t });\n\t\t\t\n\t\t},\n\t\t\n        error: function(xhr, status, error) {\n        \t\n          alert('Cannot add a new record: ', error);\n        }\n    \t}) // ajax end\n    }\n  \n    render()\n    {\n    \tconst { errors } = this.state;\n    \tconsole.log(errors);\n        return(\n        \t\n            <div>\n            <div id=\"error_explanation\" style={errors.length > 0 ? {} : { display: 'none' }}>\n              <ul>\n              {errors.map(error => (\n          <li key={error}>{error}</li>\n             ))}\n             </ul>\n            </div>\n                <form className=\"form-inline\" onSubmit={this.handleAdd}>\n\t\t      <div className=\"form-group\">\n\t\t        <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"name\"\n                 placeholder=\"Name\"\n                 value={this.state.name} \n                 onChange={evt => this.setState({ name: evt.target.value })}\n                 />\n \t\t </div>\n\t\t\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"title\"\n                 placeholder=\"Title\"\n                 value={this.state.title} \n                 onChange={evt => this.setState({ title: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"author\"\n                 placeholder=\"Author\"\n                 value={this.state.author} \n                 onChange={evt => this.setState({ author: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <select \n\t\t value={this.state.category_id} \n\t\t className=\"form-control\" \n\t\t onChange={evt => this.setState({ category_id: evt.target.value })}\n\t\t name=\"category_id\"\n\t\t >\n\t\t <option slected=\"selected\">Please Select Option</option>\n\t\t {this.props.categories.map((category) =>  (\n\t\t \t<option value={category.id} key={category.name}>{category.name}</option>\n\t\t ))\n\t\t }\n\t\t \n\t\t </select>\n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"description\"\n                 placeholder=\"Description\"\n                 value={this.state.description} \n                 onChange={evt => this.setState({ description: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n\t\t\n\t\t</form>\n            </div>\n        );\n    }\n}\nexport default PostNewForm;"]},"metadata":{},"sourceType":"module"}