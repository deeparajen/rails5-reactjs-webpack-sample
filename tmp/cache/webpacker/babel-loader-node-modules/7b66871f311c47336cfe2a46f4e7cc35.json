{"ast":null,"code":"var _jsxFileName = \"/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostNewForm.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport './custom.css';\n\nvar PostNewForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostNewForm, _React$Component);\n\n  function PostNewForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostNewForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostNewForm).call(this, props));\n    _this.state = {\n      name: '',\n      title: '',\n      author: '',\n      description: '',\n      category_id: '',\n      nameError: 'name is empty'\n    };\n    _this.handleAdd = _this.handleAdd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PostNewForm, [{\n    key: \"validate\",\n    value: function validate() {\n      var errors = [];\n\n      if (name.length === 0) {\n        errors.push(\"Name can't be empty\");\n      }\n\n      if (title.length === 0) {\n        errors.push(\"title can't be empty\");\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"handleAdd\",\n    value: function handleAdd(e) {\n      e.preventDefault();\n      var error = this.validate();\n      var self = this;\n      $.ajax({\n        url: '/api/v1/posts',\n        method: 'POST',\n        data: {\n          post: self.state\n        },\n        success: function success(data) {\n          self.props.handleAdd(data);\n          self.setState(function () {\n            return {\n              name: '',\n              title: '',\n              author: '',\n              description: '',\n              category_id: ''\n            };\n          });\n        }\n      }); // ajax end\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, errors.map(function (error) {\n        return React.createElement(\"p\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Error: \", error);\n      })), React.createElement(\"form\", {\n        className: \"form-inline\",\n        onSubmit: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            name: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            title: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"author\",\n        placeholder: \"Author\",\n        value: this.state.author,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            author: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.category_id,\n        className: \"form-control\",\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            category_id: evt.target.value\n          });\n        },\n        name: \"category_id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        slected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Please Select Option\"), this.props.categories.map(function (category) {\n        return React.createElement(\"option\", {\n          value: category.id,\n          key: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, category.name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            description: evt.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return PostNewForm;\n}(React.Component);\n\nexport default PostNewForm;","map":{"version":3,"sources":["/home/deepa/Documents/AptanaSpace3/rails5-reactjs-webpack-sample/app/javascript/components/PostNewForm.js"],"names":["React","PostNewForm","props","state","name","title","author","description","category_id","nameError","handleAdd","bind","errors","length","push","e","preventDefault","error","validate","self","$","ajax","url","method","data","post","success","setState","map","evt","target","value","categories","category","id","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './custom.css'\n\nclass PostNewForm extends React.Component{\n    constructor(props)\n    {\n    \tsuper(props);\n    \tthis.state = {\n         name: '',\n      title: '',\n      author: '',\n      description: '',\n      category_id: '',\n      nameError: 'name is empty'\n    \t}\n    \tthis.handleAdd = this.handleAdd.bind(this);\n    }  \n    \n    validate()\n    {\n    \tconst errors = [];\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  if (title.length === 0) {\n    errors.push(\"title can't be empty\");\n  }\n  \n\n  return errors;\n    }\n       \n    handleAdd(e)\n    {\n    \t\n    \te.preventDefault();\n    \tconst error = this.validate();\n    \tvar self = this;\n    \t$.ajax({\n    \t\turl: '/api/v1/posts',\n        method: 'POST',\n\t\tdata: { post: self.state },\n\t\tsuccess: function(data) {\n\t\t\tself.props.handleAdd(data);\n\t\t\tself.setState(() => {\n\t\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\ttitle: '',\n\t\t\t\tauthor: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcategory_id: ''\n\t\t\t\t}\n\t\t\t });\n\t\t\t\n\t\t}\n    \t}) // ajax end\n    }\n  \n    render()\n    {\n    \tconst { errors } = this.state;\n        return(\n        \t\n            <div>\n            <div className=\"row\">\n              {errors.map(error => (\n          <p key={error}>Error: {error}</p>\n             ))}\n            </div>\n                <form className=\"form-inline\" onSubmit={this.handleAdd}>\n\t\t      <div className=\"form-group\">\n\t\t        <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"name\"\n                 placeholder=\"Name\"\n                 value={this.state.name} \n                 onChange={evt => this.setState({ name: evt.target.value })}\n                 />\n\t\t \t\t\n\t\t </div>\n\t\t\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"title\"\n                 placeholder=\"Title\"\n                 value={this.state.title} \n                 onChange={evt => this.setState({ title: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"author\"\n                 placeholder=\"Author\"\n                 value={this.state.author} \n                 onChange={evt => this.setState({ author: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <select \n\t\t value={this.state.category_id} \n\t\t className=\"form-control\" \n\t\t onChange={evt => this.setState({ category_id: evt.target.value })}\n\t\t name=\"category_id\"\n\t\t >\n\t\t <option slected=\"selected\">Please Select Option</option>\n\t\t {this.props.categories.map((category) =>  (\n\t\t \t<option value={category.id} key={category.name}>{category.name}</option>\n\t\t ))\n\t\t }\n\t\t \n\t\t </select>\n\t\t </div>\n\t\t <div className=\"form-group\">\n\t\t <input type=\"text\"\n                 className=\"form-control\"\n                 name=\"description\"\n                 placeholder=\"Description\"\n                 value={this.state.description} \n                 onChange={evt => this.setState({ description: evt.target.value })}\n                 />\n\t\t \n\t\t </div>\n\t\t <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n\t\t\n\t\t</form>\n            </div>\n        );\n    }\n}\nexport default PostNewForm;"]},"metadata":{},"sourceType":"module"}